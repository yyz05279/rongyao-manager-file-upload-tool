name: Build Tauri App

on:
  push:
    tags:
      - "v*" # 当推送 v 开头的标签时触发，如 v1.0.0
  workflow_dispatch: # 允许手动触发

jobs:
  build-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: |
          cd tauri-app
          npm install

      - name: Build Tauri app
        run: |
          cd tauri-app
          npm run tauri build

      - name: Upload macOS DMG
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-dmg
          path: tauri-app/src-tauri/target/release/bundle/dmg/*.dmg

      - name: Upload macOS app
        if: matrix.platform == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: tauri-app/src-tauri/target/release/bundle/macos/*.app

      - name: Upload Windows MSI
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-msi
          path: tauri-app/src-tauri/target/release/bundle/msi/*.msi

      - name: Upload Windows NSIS
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: windows-nsis
          path: tauri-app/src-tauri/target/release/bundle/nsis/*.exe

  # 创建 GitHub Release（可选）
  create-release:
    needs: build-tauri
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/macos-dmg/*
            artifacts/windows-msi/*
            artifacts/windows-nsis/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

